#!/usr/bin/env bash

set -euo pipefail

baseops_wrapper() {
  set -a
  # shellcheck disable=SC1091
  source ".baseops/meta"
  set +a

  # shellcheck disable=SC1091
  source ".baseops/scripts/baseops.sh"

  # check args for internal baseops commands
  if [[ "${1:-}" == 'baseops' ]]; then
    case "${2:-}" in
      build)
        baseops_build "${@:3}" || exit 1
        shift 2
        ;;
      publish)
        baseops_publish "${@:3}" || exit 1
        shift 2
        ;;
      *)
        echo "Unknown baseops command: ${2:-}"
        exit 127
        ;;
    esac
    echo
  fi

  export DOCKER_RUN_ARGS=()

  # Handle special variables
  [[ "${CI:-}" != 'true' ]] && DOCKER_RUN_ARGS+=("-it")
  [[ -n "${BASEOPS_PORT:-}" ]] && DOCKER_RUN_ARGS+=("-p" "${BASEOPS_PORT:?}:${BASEOPS_PORT:?}" "-e" "BASEOPS_PORT")
  [[ -n "${BASEOPS_FORCE_ARCH:-}" ]] && BASEOPS_IMAGE_TAG="${BASEOPS_IMAGE_TAG:?}-${BASEOPS_FORCE_ARCH:?}" && echo "WARN: BASEOPS_FORCE_ARCH is set, BASEOPS_IMAGE_TAG set to ${BASEOPS_IMAGE_TAG:?}..."

  # Set default docker run args
  DOCKER_RUN_ARGS+=(
    -e BASEOPS_IMAGE_NAME
    -e BASEOPS_IMAGE_TAG
    -e BASEOPS_IMAGE_PLATFORMS
    -e {{ .Env.CLI_NAME | strings.ToUpper }}_VERSION="${BASEOPS_IMAGE_TAG:?}"
    -e CI)

  # Run init
  # shellcheck disable=SC1091
  source ".baseops/init.sh"
  baseops_init "$@"

  # Handle post-exec cleanup
  [[ -f ./baseops-post-exec ]] && rm ./baseops-post-exec

  # Run the container
  docker run --rm \
    "${DOCKER_RUN_ARGS[@]}" \
    "${BASEOPS_IMAGE_REGISTRY:?}/${BASEOPS_IMAGE_NAME:?}:${BASEOPS_IMAGE_TAG:?}" \
    "${@}"

  # Handle post-exec
  if [[ -f ./baseops-post-exec ]]; then
    chmod +x ./baseops-post-exec && ./baseops-post-exec && rm ./baseops-post-exec &>/dev/null
  fi
}

baseops_wrapper "$@"
